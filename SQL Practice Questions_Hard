/*Question: ID 10171
Difficulty: Hard

Postgresql SQL Dialect

Question: 
Find the genre of the person with the most number of oscar winnings.
If there are more than one person with the same number of oscar wins, 
return the first one in alphabetic order based on their name. Use the names as keys when joining the tables.

Table1: oscar_nominees
---------------------------
year:       | int
category:   | varchar
nominee:    | varchar
movie:      | varchar
winner:     | bool
id:         | int
---------------------------

Table2: nominee_information
---------------------------
name:            |varchar
amg_person_id:   |varchar
top_genre:       |varchar
birthday:        |datetime
id:              |int
-----------------------------


Query:*/

with winner as(
select 
nominee,
count(*) as wins
from oscar_nominees
where winner = TRUE
group by 1
order by 2 desc,1 asc),
oscar_rank as(
select
*,
rank() over(order by wins desc, nominee asc) as ranking
from winner)
select
i.top_genre
from nominee_information as i 
inner join oscar_rank as r 
on i.name = r.nominee
where r.ranking = 1;

/*Results:
Drama
*/
------------------------------------------------------------------------------------------------------
/*Question ID: ID 10145

Question: Make a pivot table to find the highest payment in each year for each employee.
Find payment details for 2011, 2012, 2013, and 2014.
Output payment details along with the corresponding employee name.
Order records by the employee name in ascending order

Table1: sf_public_salaries

id:   int
employeename:   varchar
jobtitle:   varchar
basepay:    float
overtimepay:    float
otherpay:   float
benefits:   float
totalpay:   float
totalpaybenefits:   float
year:   int
notes:  datetime
agency: varchar
status: varchar

Query: */

select 
employeename,
MAX(CASE WHEN year = 2011 then totalpay else 0 end) as pay_2011,
MAX(CASE WHEN year = 2012 then totalpay else 0 end) as pay_2012,
MAX(CASE WHEN year = 2013 then totalpay else 0 end) as pay_2013,
MAX(CASE WHEN year = 2014 then totalpay else 0 end) as pay_2014
from sf_public_salaries
group by 1
order by 1 asc;

/*Results:
employeename	    pay_2011	pay_2012	pay_2013	pay_2014
Aaron Schmidt	      0	        91903.92	  0	        0
Adina M Diamond 	  0	          0	        0	    58496.19
Alan K Tolbert	    0 	        0	        0	    2070.29
Alexander M Lamond	0	          0	        0	    106319.44
Alicia Brown	      0	          2386.55	  0 	      0
*/

------------------------------------------------------------------------------------------------------
/*Question ID: ID 9855

Question: Find the 5th highest salary without using TOP or LIMIT.

Table: worker
worker_id: int
first_name: varchar
last_name: varchar
salary: int
joining_date: datetime
department: varchar

Query: */
with ranks as(
select 
worker_id,
salary,
rank() over(order by salary desc) as ranking 
from worker)
select
salary 
from ranks 
where ranking = 5

/*Results:
100000
*/
------------------------------------------------------------------------------------------------------


